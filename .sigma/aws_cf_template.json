{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates the stack for project kumu. Generated by Sigma",
  "Parameters": {
    "lambdaCodeBucketParameter": {
      "Type": "String",
      "Description": "Name of the S3 bucket containing the Lambda deployment package"
    },
    "lambdaCodeKeyParameter": {
      "Type": "String",
      "Description": "S3 key of the Lambda deployment package"
    },
    "envVarGCPSERVICEACCOUNTKEYParameter": {
      "Type": "String",
      "Description": "Value of the environment variable: GCP_SERVICE_ACCOUNT_KEY, for all Lambdas"
    },
    "envVarGCPPROJECTParameter": {
      "Type": "String",
      "Description": "Value of the environment variable: GCP_PROJECT, for all Lambdas"
    },
    "envVarkParameter": {
      "Type": "String",
      "Description": "Value of the environment variable: k, for all Lambdas"
    }
  },
  "Outputs": {
    "apigTestAPIDDBresourceANY": {
      "Description": "URL of TestAPI/DDBresource:ANY endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            "0itznun7w3",
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com/",
            "test12",
            "/DDBresource"
          ]
        ]
      }
    },
    "cognitoTestCognito": {
      "Description": "ID of Cognito user pool Test Cognito",
      "Value": "us-east-1_HdYJb7Znp"
    },
    "snsNotifications": {
      "Description": "ARN of SNS topic Notifications",
      "Value": "arn:aws:sns:us-east-1:318300609668:Notifications"
    },
    "sqsKTestSQS": {
      "Description": "URL of SQS queue KTestSQS",
      "Value": "https://sqs.us-east-1.amazonaws.com/318300609668/KTestSQS"
    },
    "kumu": {
      "Description": "ARN of Lambda function kumu",
      "Value": {
        "Fn::GetAtt": [
          "kumu",
          "Arn"
        ]
      }
    },
    "Subknew": {
      "Description": "ARN of Lambda function subii",
      "Value": {
        "Fn::GetAtt": [
          "Subknew",
          "Arn"
        ]
      }
    }
  },
  "Resources": {
    "apigTestAPIDDBresourceANY": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": "0itznun7w3",
        "ResourceId": "0aenia",
        "HttpMethod": "ANY",
        "AuthorizationType": "NONE",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            }
          }
        ],
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${kumu.Arn}/invocations"
          },
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          ]
        }
      }
    },
    "apigTestAPIDDBresourceCors": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": "0itznun7w3",
        "ResourceId": "0aenia",
        "HttpMethod": "OPTIONS",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            }
          }
        ]
      }
    },
    "kumu": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "kumu",
        "Description": "Invokes functions defined in kumu.js in project kumu. Generated by Sigma.",
        "Code": {
          "S3Bucket": {
            "Ref": "lambdaCodeBucketParameter"
          },
          "S3Key": {
            "Ref": "lambdaCodeKeyParameter"
          }
        },
        "MemorySize": 320,
        "Handler": "kumu.handler",
        "Timeout": 100,
        "Runtime": "nodejs14.x",
        "Layers": [],
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Role": {
          "Fn::GetAtt": [
            "kumuExecutionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "GCP_SERVICE_ACCOUNT_KEY": {
              "Ref": "envVarGCPSERVICEACCOUNTKEYParameter"
            },
            "GCP_PROJECT": {
              "Ref": "envVarGCPPROJECTParameter"
            },
            "k": {
              "Ref": "envVarkParameter"
            },
            "SIGMA_AWS_ACC_ID": {
              "Ref": "AWS::AccountId"
            }
          }
        }
      }
    },
    "kumuExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "kumuPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "cognito-idp:ListUsers"
                  ],
                  "Resource": "arn:aws:cognito-idp:us-east-1:318300609668:userpool/us-east-1_HdYJb7Znp"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Scan"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:318300609668:table/KChineseAnimal"
                },
                {
                  "Effect": "Allow",
                  "Action": "s3:ListBucket",
                  "Resource": "arn:aws:s3:::cloud9-ktest"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:ListSubscriptionsByTopic"
                  ],
                  "Resource": "arn:aws:sns:us-east-1:318300609668:Notifications"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage"
                  ],
                  "Resource": "arn:aws:sqs:us-east-1:318300609668:KTestSQS"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "translate:translateText"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "comprehend:DetectDominantLanguage"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "apigTestAPIDDBresourceANYPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "kumu"
        },
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/*/${__Method__}${__Path__}",
            {
              "__Method__": "*",
              "__Path__": "/DDBresource",
              "__ApiId__": "0itznun7w3"
            }
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "cweJBBlogPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "kumu"
        },
        "SourceArn": "arn:aws:events:us-east-1:318300609668:rule/JBBlog",
        "Principal": "events.amazonaws.com"
      }
    },
    "alexaSK15970ba19cb6kumuPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "kumu"
        },
        "Principal": "alexa-appkit.amazon.com",
        "EventSourceToken": "amzn1.ask.skill.15970ba1-9cb6-4f6f-9b22-e6d5710707f0"
      }
    },
    "cweJBBlogCli0kumu": {
      "Type": "Custom::cli2cloudformation",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "cli2cloudformationkumu",
            "Arn"
          ]
        },
        "CliCommandCreate": {
          "Fn::Join": [
            "",
            [
              "aws events enable-rule --name JBBlog --event-bus-name default\naws events put-targets --rule JBBlog --event-bus-name default --targets \"Id=cweJBBlogTarget,Arn=",
              {
                "Fn::GetAtt": [
                  "kumu",
                  "Arn"
                ]
              },
              "\""
            ]
          ]
        },
        "CliCommandDelete": "aws events remove-targets --rule JBBlog --event-bus-name default --ids cweJBBlogTarget",
        "CliCommandUpdate": {
          "Fn::Join": [
            "",
            [
              "aws events enable-rule --name JBBlog --event-bus-name default\naws events put-targets --rule JBBlog --event-bus-name default --targets \"Id=cweJBBlogTarget,Arn=",
              {
                "Fn::GetAtt": [
                  "kumu",
                  "Arn"
                ]
              },
              "\""
            ]
          ]
        }
      }
    },
    "Subknew": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "subii",
        "Description": "Invokes functions defined in Sub/knew.js in project kumu. Generated by Sigma.",
        "Code": {
          "S3Bucket": {
            "Ref": "lambdaCodeBucketParameter"
          },
          "S3Key": {
            "Ref": "lambdaCodeKeyParameter"
          }
        },
        "MemorySize": 256,
        "Handler": "Sub/knew.handler",
        "Timeout": 60,
        "Runtime": "nodejs12.x",
        "Layers": [],
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Role": {
          "Fn::GetAtt": [
            "SubknewExecutionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "GCP_SERVICE_ACCOUNT_KEY": {
              "Ref": "envVarGCPSERVICEACCOUNTKEYParameter"
            },
            "GCP_PROJECT": {
              "Ref": "envVarGCPPROJECTParameter"
            },
            "k": {
              "Ref": "envVarkParameter"
            },
            "SIGMA_AWS_ACC_ID": {
              "Ref": "AWS::AccountId"
            }
          }
        }
      }
    },
    "SubknewExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "cli2cloudformationkumu": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "cli2cloudformationkumu",
        "Description": "This is a utility lambda generated by Sigma, for bringing CF-unsupported operations into the CF template. Kudos to https://github.com/lucioveloso/cli2cloudformation",
        "Code": {
          "S3Bucket": "resources.us-east-1.sigma.slappforge.com",
          "S3Key": "CF/cf_shell_v2.zip"
        },
        "MemorySize": 128,
        "Handler": "index.lambda_handler",
        "Timeout": 60,
        "Runtime": "python3.8",
        "Layers": [],
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Role": {
          "Fn::GetAtt": [
            "cli2cloudformationkumuExecutionRole",
            "Arn"
          ]
        }
      }
    },
    "cli2cloudformationkumuExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "cli2cloudformationkumuPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "events:PutTargets",
                    "events:EnableRule",
                    "events:RemoveTargets"
                  ],
                  "Resource": "arn:aws:events:us-east-1:318300609668:rule/JBBlog"
                }
              ]
            }
          }
        ]
      }
    },
    "apigTestAPIDeployment1627649807728": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": "0itznun7w3",
        "Description": "An API deployment generated by Sigma for API TestAPI",
        "StageName": "test12"
      },
      "DependsOn": [
        "apigTestAPIDDBresourceANY",
        "apigTestAPIDDBresourceCors"
      ]
    }
  }
}